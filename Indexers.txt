Indexer is a member of a .net class just like properties and methods.

class starts like behaving as an virtual array. 

Employee Class

-ENo
-Ename
-Job
-Salary 
-Department
-Location

public class Employee
{
	int Eno;
	string Ename, Job, Department, Location;
	double Salary;

	//Constructor
	public Employee(int Eno, string Ename, string job, string Department, string Location, double Salary)
	{
		this.Eno = Eno;
		this.Ename = Ename;
		this.Job = Job;
		this.Department = Department;
		this.Location = Location;
		this.Salary = Salary;
	}
	
	public object this[int index]
	{
		get 
		{
			if(index == 0)
				return Eno;
			else if(index == 1)
				return Ename;
			else if(index == 2)
				return Job;
			else if(index == 3)
				return Department;
			else if(index == 4)
				return Location;
			else if(index == 5)
				return Salary;
			return null;
		}
		
		set 
		{
			if(index == 0)
				Eno = (int)value;
			else if(index == 1)
				Ename = (string)value;
			else if(index == 2)
				Job = (string)value;
			else if(index == 3)
				Department = (string)value;
			else if(index == 4)
				Location = (stringvalue;
			else if(index == 5)
				Salary = (double)value;
		}

	}

	public object this[string name]
	{
		get 
		{
			if(name.ToUpper() == "ENO")
				return Eno;
			else if(name.ToUpper() == "ENAME")
				return Ename;
			else if(name.ToUpper() == "JOB")
				return Job;
			else if(name.ToUpper() == "DEPARTMENT")
				return Department;
			else if(name.ToUpper() == "LOCATION")
				return Location;
			else if(name.ToUpper() == "SALARY")
				return Salary;
			return null; 
		}

		set 
		{
			if(name.ToUpper() == "ENO")
				Eno = (int)value;
			else if(name.ToUpper() == "ENAME")
				Ename = (string)value;
			else if(name.ToUpper() == "JOB")
				Job = (string)value;
			else if(name.ToUpper() == "DEPARTMENT")
				Department = (string)value;
			else if(name.ToUpper() == "LOCATION")
				Location = (string)value;
			else if(name.ToUpper() == "SALARY")
				Salary = (double)value;
		}
	}
}

Consume the Employee class from another class

class TestEmployee
{
	static void Main()
	{
	Employee emp = new Employee(100,"Scott","Manager","IT","Delhi",12345);
	}
}

So basically, I cannot get instance's members value by just applying emp[0] as that will give an error. hence we have to create indexer of the class to have that

Here is the syntax of Indexer

[<modifiers>] <type> this[<parameter list>]
{
	[get {<statement>{] //Get Accessor
	[set {<statement>{] //Set Accessor
}

